@using GameZone.Models
@model List<GameViewModel>

@{
    ViewBag.Title = "Hall of Games";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="text-center row">
    @foreach (var e in Model)
    {
        <div class="card col-3 h-100" style="width: 20rem; ">
            @if (!string.IsNullOrEmpty(e.ImageUrl))
            {
                <img src="@e.ImageUrl" class="card-img-top img-fluid" style="height: 200px; object-fit: cover;" alt="Game Image">
            }
            else
            {
                <img src="~/img/PH.jpg" class="card-img-top img-fluid" style="height: 200px; object-fit: cover;" alt="Placeholder Image">
            }
            <div class="card-body" style="height: calc(100% - 150px); overflow: auto;">
                <div class="row">
                    <div class="col-12">
                        <div class="title-wrapper" style="height: 6em; overflow: hidden;">
                            <h4 class="card-title mt-1">@e.Title</h4>
                        </div>
                    </div>
                </div>
                <h5 class="card-title mt-1">@e.Genre</h5>
                <p class="mb-0"><span class="fw-bold">Released On: </span>@e.ReleasedOn</p>
            </div>

            <div class="row gx-0">
                <div class="col-12 px-1">
                    <a asp-controller="Game" asp-action="AddToMyZone" asp-route-id="@e.Id" class="btn btn-warning btn-sm mb-2 w-100 fw-bold rounded btn-dark-text">Add to MyZone</a>
                </div>
                <input type="datetime-local" />
                <label for="meeting-time">Choose a time for your appointment:</label>
                <input type="datetime-local"
                       id="meeting-time"
                       name="meeting-time"
                       value="2018-06-12T19:30"
                       step="3600"
                       min="2018-06-07T00:00"
                       max="2018-06-14T00:00" />

            </div>
            <label for="meeting-date">Select a date:</label>
            <input type="date" id="meeting-date" 
                   name="meeting-date" 
                    min="2024-10-23"
                   max="2024-11-25">

            <label for="meeting-time">Select a time:</label>
            <select id="meeting-time" name="meeting-time">
                <option value="09:00">09:00</option>
                <option value="10:00">10:00</option>
                <option value="11:00">11:00</option>
                <option value="12:00">12:00</option>
                <option value="13:00">13:00</option>
                <option value="14:00">14:00</option>
                <option value="15:00">15:00</option>
            </select>

            <label for="meeting-date">Select a date:</label>
            <input type="date" id="meeting-date" name="meeting-date">

            <label for="meeting-time">Select a time:</label>
            <select id="meeting-time" name="meeting-time">
                <!-- Options will be dynamically populated based on the selected date -->
            </select>

            <script>
                document.getElementById('meeting-date').addEventListener('change', function () {
                    const selectedDate = this.value;

                    // Make an AJAX request to fetch available times for the selected date
                    fetch(`/Game/GetAvailableTimes?date=${selectedDate}`)
                        .then(response => response.json())
                        .then(data => {
                            const timeSelect = document.getElementById('meeting-time');
                            timeSelect.innerHTML = ''; // Clear previous options

                            // Populate the select element with new options
                            data.availableTimes.forEach(time => {
                                const option = document.createElement('option');
                                option.value = time;
                                option.textContent = time;
                                timeSelect.appendChild(option);
                            });
                        })
                        .catch(error => console.error('Error fetching available times:', error));
                });
            </script>








            <div class="row gx-0">
                @if (User?.Identity?.Name == e.Publisher)
                {
                    <div class="col-6 px-1">
                        <a asp-controller="Game" asp-action="Edit" asp-route-id="@e.Id" class="btn btn-warning btn-sm mb-2 w-100 fw-bold rounded btn-dark-text">Edit</a>
                    </div>
                    <div class="col-6 px-1">
                        <a asp-controller="Game" asp-action="Details" asp-route-id="@e.Id" class="btn btn-warning btn-sm mb-2 w-100 fw-bold rounded btn-dark-text">Details</a>
                    </div>
                }
                else
                {
                    <div class="col-12 px-1">
                        <a asp-controller="Game" asp-action="Details" asp-route-id="@e.Id" class="btn btn-warning btn-sm mb-2 w-100 fw-bold rounded btn-dark-text">Details</a>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
